--- build.xml.orig	2009-12-26 09:11:39.211850481 +0100
+++ build.xml	2009-12-26 09:12:52.782683274 +0100
@@ -33,65 +33,65 @@
 		<exclude name="**/icon?*.png"/>
 	</patternset>
 	
-	<!-- detect current platform -->
-	<condition property="platform" value="linux">
-		<os name="Linux" arch="i386"/>
-	</condition>
-	<condition property="platform" value="linux64">
-		<or>
-			<os name="Linux" arch="amd64"/>
-			<os name="Linux" arch="ia64"/>
-			<os name="Linux" arch="x86_64"/>
-		</or>
-	</condition>
-	<condition property="platform" value="mac">
-		<os family="mac"/>
-	</condition>
-	<condition property="platform" value="win32">
-		<os family="windows"/>
-	</condition>
-	<condition property="platform" value="unknown">
-		<not>
-			<isset property="platform"/>
-		</not>
-	</condition>
-
-	<target name="all" depends="clean,compile,compile-tests,test,package,clean_end"/>
-	<target name="linux" depends="clean,compile-linux,package-linux,clean_end"/>
-	<target name="linux64" depends="clean,compile-linux64,package-linux64,clean_end"/>
-	<target name="mac" depends="clean,compile-mac,package-mac,clean_end"/>
-	<target name="win32" depends="clean,compile-win32,package-win32,clean_end"/>
-	<target name="current">
-		<antcall target="${platform}"/>
-	</target>
-	
-	<!-- this is run by cruise control continous integration -->
-	<target name="cruise" depends="clean,compile,compile-tests,package,clean_end"/>
-
+	<!-- detect current platform -->
+	<condition property="platform" value="linux">
+		<os name="Linux" arch="i386"/>
+	</condition>
+	<condition property="platform" value="linux64">
+		<or>
+			<os name="Linux" arch="amd64"/>
+			<os name="Linux" arch="ia64"/>
+			<os name="Linux" arch="x86_64"/>
+		</or>
+	</condition>
+	<condition property="platform" value="mac">
+		<os family="mac"/>
+	</condition>
+	<condition property="platform" value="win32">
+		<os family="windows"/>
+	</condition>
+	<condition property="platform" value="unknown">
+		<not>
+			<isset property="platform"/>
+		</not>
+	</condition>
+
+	<target name="all" depends="clean,compile,compile-tests,test,package,clean_end"/>
+	<target name="linux" depends="clean,compile-linux,package-linux,clean_end"/>
+	<target name="linux64" depends="clean,compile-linux64,package-linux64,clean_end"/>
+	<target name="mac" depends="clean,compile-mac,package-mac,clean_end"/>
+	<target name="win32" depends="clean,compile-win32,package-win32,clean_end"/>
+	<target name="current">
+		<antcall target="${platform}"/>
+	</target>
+	
+	<!-- this is run by cruise control continous integration -->
+	<target name="cruise" depends="clean,compile,compile-tests,package,clean_end"/>
+
 	<target name="info">
-		<echo message="This script will build ${name} ${version}"/>
+		<echo message="This script will build ${name} ${version}"/>
 		<echo message="Targets (some may work only on Linux):"/>
 		<echo message="  all     - runs tests and builds binaries for all OSs"/>
-		<echo message="  linux   - builds only Linux 32-bit binary"/>
+		<echo message="  linux   - builds only Linux 32-bit binary"/>
 		<echo message="  linux64 - builds only Linux 64-bit binary"/>
 		<echo message="  mac     - builds only Mac binary"/>
-		<echo message="  win32   - builds only Windows binary"/>
+		<echo message="  win32   - builds only Windows binary"/>
 		<echo message="  current = ${platform}"/>
 	</target>
-
-	<target name="clean">
+
+	<target name="clean">
 		<delete dir="${dist}"/>
-        <antcall target="clean_end"/>
+        <antcall target="clean_end"/>
 	</target>
-	
-    <target name="clean_end">
-		<delete dir="${bin}"/>
-		<delete dir="${testbin}"/>
-		<delete dir="${bin}.linux"/>
-		<delete dir="${bin}.linux64"/>
-		<delete dir="${bin}.win32"/>
-		<delete dir="${bin}.mac"/>
-		<delete dir="${testresults}"/>
+	
+    <target name="clean_end">
+		<delete dir="${bin}"/>
+		<delete dir="${testbin}"/>
+		<delete dir="${bin}.linux"/>
+		<delete dir="${bin}.linux64"/>
+		<delete dir="${bin}.win32"/>
+		<delete dir="${bin}.mac"/>
+		<delete dir="${testresults}"/>
     </target>
 
 	<macrodef name="compile">
@@ -167,18 +167,18 @@
 			<classpath>
 				<path location="${testbin}"/>
 				<fileset dir="${swt}" includes="swt-${platform}.jar"/>
-				<fileset dir="${ext}/junit" includes="*.jar"/>
+				<fileset dir="${ext}/junit" includes="*.jar"/>
 				<fileset dir="${ext}/easymock" includes="*.jar"/>
-				<fileset dir="${ext}/picocontainer" includes="*.jar"/>
+				<fileset dir="${ext}/picocontainer" includes="*.jar"/>
 				<path refid="emma.lib"/>
 			</classpath>
 			<formatter type="xml"/>
 			<batchtest todir="${testresults}">
 				<fileset dir="${testbin}" includes="**/*Test.class"/>
 			</batchtest>
-		</junit>
-		<!--
-		report: no valid input data files have been specified
+		</junit>
+		<!--
+		report: no valid input data files have been specified
 		<emma>
 			<report sourcepath="${src}" encoding="UTF-8">
 				<fileset dir="${basedir}" includes="coverage.ec"/>
@@ -213,11 +213,11 @@
 	<macrodef name="package-for">
 		<attribute name="platform"/>
 		<attribute name="librocksaw"/>
-		<sequential>
+		<sequential>
 			<mkdir dir="${dist}"/>
 			<unzip src="${ext}/picocontainer/picocontainer-1.0.jar" dest="${bin}.@{platform}"/>
 			<unzip src="${swt}/swt-@{platform}.jar" dest="${bin}.@{platform}"/>
-			<copy file="${ext}/rocksaw/lib/@{librocksaw}" todir="${bin}.@{platform}"/>
+			<copy file="${ext}/rocksaw/lib/@{librocksaw}" todir="${bin}.@{platform}"/>
 			<copy file="${ext}/winping/lib/winping.dll" todir="${bin}.win32"/>
 			<delete includeemptydirs="true" failonerror="false">
 				<fileset dir="${bin}.@{platform}/images" includes="**/*.svg"/>
@@ -284,14 +284,14 @@
 					<include name="Color*"/>
 					<include name="Link*"/>
 					<include name="Tracker*"/>
-					<include name="Date*"/>
+					<include name="Date*"/>
 					<include name="Tray*"/>
 					<include name="Tree*"/>
 					<include name="DateTime*"/>
 					<include name="Sash*"/>
 				</fileset>
 				<fileset dir="${bin}.@{platform}/org/eclipse/swt/awt"/>
-			</delete>
+			</delete>
 			<jar destfile="${dist}/${ant.project.name}-@{platform}-orig.jar" >
 				<manifest>
 					<attribute name="Main-Class" value="${main.class}"/>
@@ -342,49 +342,50 @@
 				-keep class * {
 					% *Proc(int, int, int);
 				}
-			</proguard>
-			
+			</proguard>
+			
 			<delete file="${dist}/${ant.project.name}-@{platform}-orig.jar"/>
 		</sequential>
 	</macrodef>
 	
 	<target name="package-linux" depends="svn-info">
-		<package-for platform="linux" librocksaw="librocksaw.so"/>
-		
-		<!-- now create deb package for Ubuntu and such -->
+		<package-for platform="linux" librocksaw="librocksaw.so"/>
+		
+		<!-- now create deb package for Ubuntu and such
 		<antcall target="package-linux-deb-rpm"/>
-	</target>
-	
-	<target name="package-linux64" depends="svn-info">
-		<package-for platform="linux64" librocksaw="librocksaw.so"/>
-	</target>
-	
-	<target name="package-linux-deb-rpm" if="isRunningOnLinux">
-		<mkdir dir="${dist}/deb"/>
-		<copy todir="${dist}/deb">
-			<fileset dir="${ext}/deb-bundle"/>
-		</copy>
-		
-		<copy file="${dist}/${ant.project.name}-linux-${version}.jar" todir="${dist}/deb/usr/lib/ipscan"/>
-		<copy file="resources/images/icon.png" tofile="${dist}/deb/usr/share/pixmaps/ipscan.png"/>
-		
-		<replace file="${dist}/deb/DEBIAN/control">
-			<replacefilter token="VERSION" value="${version}"/>
-		</replace>
-		
-		<exec executable="chmod" dir="${dist}">
-			<arg line="a+x deb/usr/bin/ipscan deb/usr/lib/ipscan/${ant.project.name}-linux-${version}.jar"/>
-		</exec>
-		<echo message="Trying to build .deb package using dpkg..."/>
-		<exec executable="dpkg" dir="${dist}">
-			<arg line="-b deb ${ant.project.name}_${version}_i386.deb"/>
-		</exec>
-		<echo message="Trying to build .rpm package using alien..."/>
-		<exec executable="alien" dir="${dist}">
-			<arg line="--to-rpm ${ant.project.name}_${version}_i386.deb"/>
-		</exec>
-		
-		<delete dir="${dist}/deb"/>
+                -->
+	</target>
+	
+	<target name="package-linux64" depends="svn-info">
+		<package-for platform="linux64" librocksaw="librocksaw.so"/>
+	</target>
+	
+	<target name="package-linux-deb-rpm" if="isRunningOnLinux">
+		<mkdir dir="${dist}/deb"/>
+		<copy todir="${dist}/deb">
+			<fileset dir="${ext}/deb-bundle"/>
+		</copy>
+		
+		<copy file="${dist}/${ant.project.name}-linux-${version}.jar" todir="${dist}/deb/usr/lib/ipscan"/>
+		<copy file="resources/images/icon.png" tofile="${dist}/deb/usr/share/pixmaps/ipscan.png"/>
+		
+		<replace file="${dist}/deb/DEBIAN/control">
+			<replacefilter token="VERSION" value="${version}"/>
+		</replace>
+		
+		<exec executable="chmod" dir="${dist}">
+			<arg line="a+x deb/usr/bin/ipscan deb/usr/lib/ipscan/${ant.project.name}-linux-${version}.jar"/>
+		</exec>
+		<echo message="Trying to build .deb package using dpkg..."/>
+		<exec executable="dpkg" dir="${dist}">
+			<arg line="-b deb ${ant.project.name}_${version}_i386.deb"/>
+		</exec>
+		<echo message="Trying to build .rpm package using alien..."/>
+		<exec executable="alien" dir="${dist}">
+			<arg line="--to-rpm ${ant.project.name}_${version}_i386.deb"/>
+		</exec>
+		
+		<delete dir="${dist}/deb"/>
 	</target>
 
 	<target name="package-win32" depends="svn-info">
